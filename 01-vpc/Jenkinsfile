pipeline {
    agent {
        node {
            label 'Agent'
        }
    }

    options {
        timeout(time: 1, unit: 'HOURS') 
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'CHOICE', choices: ['apply', 'destroy'], description: 'Pick something')
    }

    stages {
        stage('Init') {
            steps {
                sh """
                    cd 01-vpc
                    terraform init -reconfigure
                """
            }
        }
        stage('Test') {
            steps {
                sh """
                    cd 01-vpc
                    terraform plan
                """
            }
        }
        stage('Deploy') {
            when {
                expression {
                    params.action == 'apply'
                }
            }
            steps {
                input {
                    message "Should we continue?"
                    ok "Yes, we should."
                }
                sh """
                    cd 01-vpc
                    terraform apply -auto-approve
                """
            }
        }
    }

    post { 
        always { 
            echo 'I will always say Hello again and again!'
        }
        failure {
            echo 'This runs when the pipeline fails, generally used to send some alerts'
        }
        success {
           echo 'I will say Hello when the pipeline is successful'
        }
    }
}
